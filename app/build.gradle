/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'com.github.johnrengelman.shadow' version '6.1.0'
    id 'org.springframework.boot' version '2.4.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

repositories {
    mavenLocal()
    mavenCentral()
}

ext {
    openTelemetryVersion = '1.0.0'
    openTelemetryAlphaVersion = '1.0.0-alpha'
}

dependencies {
    // Use JUnit Jupiter API for testing.
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")

    // Use JUnit Jupiter Engine for testing.
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")

    // This dependency is used by the application.
    implementation("com.google.guava:guava:29.0-jre")
    implementation("org.slf4j:slf4j-api:1.7.30")
    implementation("ch.qos.logback:logback-classic:1.2.3")
    implementation("io.opentelemetry:opentelemetry-api:${openTelemetryVersion}")
    implementation("io.opentelemetry:opentelemetry-sdk:${openTelemetryVersion}")
    implementation("io.opentelemetry:opentelemetry-exporter-otlp:${openTelemetryVersion}")

    //pull in the autoconfigure extension so we parse the `otel.resource.attributes` system property used in the example.
    implementation("io.opentelemetry:opentelemetry-sdk-extension-autoconfigure:${openTelemetryAlphaVersion}")
    implementation("io.opentelemetry:opentelemetry-api-metrics:${openTelemetryAlphaVersion}")
    implementation("io.opentelemetry:opentelemetry-sdk-metrics:${openTelemetryAlphaVersion}")
    implementation("io.opentelemetry:opentelemetry-exporter-otlp-metrics:${openTelemetryAlphaVersion}")

    // Stanford - nlp
    implementation group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '4.0.0'
    implementation group: 'edu.stanford.nlp', name: 'stanford-corenlp', version: '4.0.0', classifier: 'models'

    // Spring
    implementation group: 'org.springframework.boot', name: 'spring-boot-loader', version: '1.2.3.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    //external dependency for the grpc transport implementation
    implementation("io.grpc:grpc-netty-shaded:1.36.0")
}

springBoot {
    // Define the main class for the application.
    mainClass = 'com.appdynamics.tagly.App'
}
mainClassName = 'com.appdynamics.tagly.App'

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
