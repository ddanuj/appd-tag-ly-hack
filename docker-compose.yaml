version: "2"
services:

  # Prometheus
  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml
    ports:
      - "9090"
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'

  # Jaeger
#  jaeger-all-in-one:
#    container_name: jaeger
#    image: jaegertracing/all-in-one:latest
#    ports:
#      - "16686"
#      - "14268"
#      - "14250"

  # Zipkin
#  zipkin-all-in-one:
#    container_name: zipkin
#    image: openzipkin/zipkin:latest
#    ports:
#      - "9411"
#    logging:
#      driver: loki
#      options:
#        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'

  # Collector
  otel-collector:
    container_name: otel-collector
    image: ${OTELCOL_IMG}
    command: ["--config=/etc/otel-collector-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317"        # OTLP gRPC receiver
      - "55670:55679" # zpages extension
    depends_on:
      - tempo
#      - zipkin-all-in-one
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'

  # Agent
  otel-agent:
    container_name: otel-agent
    image: ${OTELCOL_IMG}
    command: ["--config=/etc/otel-agent-config.yaml", "${OTELCOL_ARGS}"]
    volumes:
      - ./otel-agent-config.yaml:/etc/otel-agent-config.yaml
    ports:
      - "8887:8888"   # Prometheus metrics exposed by the agent
      - "14250"       # Jaeger grpc receiver
      - "14268"       # Jaeger http thrift receiver
      - "55678"       # OpenCensus receiver
      - "4317:4317"   # OTLP gRPC receiver
      - "9411"        # Zipkin receiver
      - "1777:1777"   # pprof extension
      - "55679:55679" # zpages extension
      - "13133"       # health_check
    depends_on:
      - otel-collector
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'

  # Synthetic load generators
#  jaeger-emitter:
#    container_name: jaeger-load-generator
#    image: omnition/synthetic-load-generator:1.0.25
#    environment:
#      - JAEGER_COLLECTOR_URL=http://otel-agent:14268
#    depends_on:
#      - otel-agent
#
#  zipkin-emitter:
#    container_name: zipkin-load-generator
#    image: omnition/synthetic-load-generator:1.0.25
#    environment:
#      - ZIPKINV2_JSON_URL=http://otel-agent:9411/api/v2/spans
#    depends_on:
#      - otel-agent

#  metrics-load-generator:
#    image: golang:1.12.7
#    volumes:
#      - ./app/main.go:/usr/src/main.go
#    environment:
#      - GO111MODULE=on
#      - OTEL_AGENT_ENDPOINT=otel-agent:55678
#    command: ["bash", "-c", "go run /usr/src/main.go"]
#    depends_on:
#      - otel-agent

  tempo:
    container_name: tempo
    image: grafana/tempo:latest
    command: [ "--target=all", "--storage.trace.backend=local", "--storage.trace.local.path=/var/tempo", "--auth.enabled=false" ]
    ports:
      - 8081:80

  tempo-query:
    container_name: tempo_query
    image: grafana/tempo-query:latest
    #command: ["--grpc-storage-plugin.configuration-file=/etc/tempo-query.yaml"]
    environment:
      - BACKEND=tempo:80
    volumes:
      - ./config/tempo/tempo-query.yaml:/etc/tempo-query.yaml
    ports:
      - "16686:16686"  # jaeger-ui
    depends_on:
      - tempo
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'

  loki:
    container_name: loki
    image: grafana/loki:latest
    command: -config.file=/etc/loki/local-config.yaml
    ports:
      - "3100:3100"
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'

  grafana:
    container_name: grafana
    image: grafana/grafana:latest
    volumes:
      - ./config/grafana:/etc/grafana/provisioning/datasources
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
    ports:
      - "3000:3000"
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'

  order-processor:
    container_name: order-processor
    build:
      context: ./app
      dockerfile: Dockerfile-order-processor
    ports:
      - "7071:7071"
    depends_on:
      - otel-agent
      - otel-collector
      - prometheus
      - tempo
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'

  order-service:
    container_name: order-service
    build:
      context: ./app
      dockerfile: Dockerfile-order-service
    ports:
      - "7070:7070"
    depends_on:
      - order-processor
      - subscription-service
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'

  subscription-service:
    container_name: subscription-service
    build:
      context: ./app
      dockerfile: Dockerfile-subscription-service
    ports:
      - "7072:7072"
    depends_on:
      - otel-agent
      - otel-collector
      - prometheus
      - tempo
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'


  app:
    container_name: tagly_app
    build:
      context: ./app
      dockerfile: Dockerfile-app
    depends_on:
      - order-service
    logging:
      driver: loki
      options:
        loki-url: 'http://host.docker.internal:3100/loki/api/v1/push'